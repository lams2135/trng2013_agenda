# Lams's Agenda unittest makefile
# Version : 0.3 (Updating)
# Author : Lams Lupin
# Email : lams2135@gmail.com
# Special thanks to Idoit Chuang.
#
# SYNOPSIS:
#
#   make [all]  - makes everything.
#   make TARGET - makes the given target.
#   make run    - automatically run tests after building.
#   make clean  - removes all files generated by make.

# Please tweak the following variable definitions as needed by your
# project, except GTEST_HEADERS, which you can use in your own targets
# but shouldn't modify.

# Points to the root of Google Test, relative to where this file is.
# Remember to tweak this if you move this file.
GTEST_DIR = gtest

# Where to find user code.
USER_DIR = ../src

# Flags passed to the preprocessor.
# Set Google Test's header directory as a system directory, such that
# the compiler doesn't generate warnings in Google Test headers.
CPPFLAGS += -isystem $(GTEST_DIR)/include

# Flags passed to the C++ compiler.
CXXFLAGS += -g -Wall -Wextra -pthread

# All tests produced by this Makefile.  Remember to add new tests you
# created to the list.
TESTS = agenda_unittest

# All Google Test headers.  Usually you shouldn't change this
# definition.
GTEST_HEADERS = $(GTEST_DIR)/include/gtest/*.h \
                $(GTEST_DIR)/include/gtest/internal/*.h

# House-keeping build targets.

all : $(TESTS)

run : $(TESTS)
	./agenda_unittest

clean :
	rm -f $(TESTS) gtest.a gtest_main.a *.o *.dat

# First builds gtest.a and gtest_main.a.

GTEST_SRCS_ = $(GTEST_DIR)/src/*.cc $(GTEST_DIR)/src/*.h $(GTEST_HEADERS)

gtest-all.o : $(GTEST_SRCS_)
	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) $(CXXFLAGS) -c \
            $(GTEST_DIR)/src/gtest-all.cc

gtest_main.o : $(GTEST_SRCS_)
	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) $(CXXFLAGS) -c \
            $(GTEST_DIR)/src/gtest_main.cc

gtest.a : gtest-all.o
	$(AR) $(ARFLAGS) $@ $^

gtest_main.a : gtest-all.o gtest_main.o
	$(AR) $(ARFLAGS) $@ $^

Date.o : $(USER_DIR)/Date.cpp $(USER_DIR)/Date.h $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(USER_DIR)/Date.cpp

User.o : $(USER_DIR)/User.cpp $(USER_DIR)/User.h $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(USER_DIR)/User.cpp

Meeting.o : $(USER_DIR)/Meeting.cpp $(USER_DIR)/Meeting.h $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(USER_DIR)/Meeting.cpp

UserManage.o : $(USER_DIR)/UserManage.cpp $(USER_DIR)/UserManage.h $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(USER_DIR)/UserManage.cpp

MeetingManage.o : $(USER_DIR)/MeetingManage.cpp $(USER_DIR)/MeetingManage.h $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(USER_DIR)/MeetingManage.cpp

FileManage.o : $(USER_DIR)/FileManage.cpp $(USER_DIR)/FileManage.h $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(USER_DIR)/FileManage.cpp

AgendaService.o : $(USER_DIR)/AgendaService.cpp $(USER_DIR)/AgendaService.h $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $(USER_DIR)/AgendaService.cpp

agenda_unittest.o : agenda_unittest.cc \
                     $(USER_DIR)/Date.h $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c agenda_unittest.cc

agenda_unittest : Date.o User.o Meeting.o UserManage.o \
                  MeetingManage.o FileManage.o \
				  AgendaService.o \
				  agenda_unittest.o gtest_main.a
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread $^ -o $@
